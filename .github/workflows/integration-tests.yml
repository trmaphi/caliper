name: Integration Tests

on:
  workflow_call:

env:
  NPM_VERSION: 8.15.0

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      adaptor: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          fabric:
            - 'packages/caliper-cli/**'
            - 'packages/caliper-core/**'
            - 'packages/caliper-fabric/**'
            - 'packages/caliper-publish/**'
            - 'packages/caliper-tests-integration/fabric_tests/**'
            - '.github/workflows/integration-tests.yml'
            - 'package-lock.json'
          ethereum:
            - 'packages/caliper-cli/**'
            - 'packages/caliper-core/**'
            - 'packages/caliper-ethereum/**'
            - 'packages/caliper-publish/**'
            - 'packages/caliper-tests-integration/ethereum_tests/**'
            - '.github/workflows/integration-tests.yml'
            - 'package-lock.json'
          besu:
            - 'packages/caliper-cli/**'
            - 'packages/caliper-core/**'
            - 'packages/caliper-ethereum/**'
            - 'packages/caliper-publish/**'
            - 'packages/caliper-tests-integration/besu_tests/**'
            - '.github/workflows/integration-tests.yml'
            - 'package-lock.json'
          generator:
            - 'packages/caliper-cli/**'
            - 'packages/caliper-core/**'
            - 'packages/caliper-fabric/**'
            - 'packages/generator-caliper/**'
            - 'packages/caliper-publish/**'
            - 'packages/caliper-tests-integration/generator_tests/**'
            - '.github/workflows/integration-tests.yml'
            - 'package-lock.json'

  integration-tests:
    needs: changes
    if: ${{ needs.changes.outputs.adaptor != '[]' && needs.changes.outputs.adaptor != '' }}
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        adaptor: ${{ fromJSON(needs.changes.outputs.adaptor) }}
        node-version: [18.x, 20.x, 22.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install higher version of NPM
      run: npm install -g npm@${{ env.NPM_VERSION }}
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          packages/*/node_modules
        key: ${{ matrix.node-version }}-npm-cache-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ matrix.node-version }}-npm-cache-
    - name: Cache SUT binding
      id: cache-sut
      uses: actions/cache@v3
      with:
        path: /tmp/sut/cached
        key: ${{ format('{0}-sut-cache-{1}-{2}', matrix.node-version, matrix.adaptor, hashFiles(format('packages/caliper-tests-integration/{0}_tests/run.sh', matrix.adaptor))) }}
        restore-keys: |
          ${{ matrix.node-version }}-sut-cache-${{ matrix.adaptor }}-
    - name: Install project dependencies
      if: steps.cache-npm.outputs.cache-hit != 'true'
      run: npm ci
    - name: Create directory to store SUT bindings
      if: steps.cache-sut.outputs.cache-hit != 'true'
      run: mkdir -p /tmp/sut
    - name: Run integration tests
      run: ./run-tests.sh
      working-directory: ./packages/caliper-tests-integration/
      env:
        BENCHMARK: ${{ matrix.adaptor }}
        CALL_METHOD: "node ${{ github.workspace }}/packages/caliper-cli/caliper.js"
        BIND_IN_PACKAGE_DIR: "true"
        GENERATOR_METHOD: "yo ${{ github.workspace }}/packages/generator-caliper/generators/benchmark/index.js"
        SUT_DIR: "/tmp/sut"
